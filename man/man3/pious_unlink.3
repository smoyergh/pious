.TH pious_unlink 3PIOUS "25 January 1995" " " "PIOUS"
.SH NAME
pious_unlink \- delete a file

.SH SYNOPSIS C
int pious_unlink(char *path);

int pious_sunlink(struct pious_dsvec *dsv, int dsvcnt, char *path);

.SH SYNOPSIS FORTRAN
subroutine piousfunlink(path, rc)

subroutine piousfsunlink(hname, spath, lpath, dsvcnt, path, rc)

integer dsvcnt, rc

character*(*) hname, spath, lpath, path

.SH DESCRIPTION
pious_unlink() deletes the regular file
.I path
declustered on the default data servers.

pious_sunlink() performs the same action as pious_unlink(), except that
the data servers on which the file is declustered are specified by the
.I dsvcnt
element vector
.I dsv.

Corresponding Fortran functions accept argument values of type integer
and character, as required, and return the result code in
.I rc.
In specifying a set of data servers,
.I hname, spath,
and
.I lpath
take the place of the C structure
.I dsv.

See pious_open() for a discussion on valid values for the
.I dsv (hname, spath, lpath)
argument(s).


Because PIOUS files are segmented and declustered, a system failure
or unexpected denial of access during an unlink operation can
result in a partial file remaining.  PIOUS recognizes partial files
and treats them as not extant.  The remains
of a partial file can be removed by simply re-unlinking the file.

Note that pious_unlink() only operates on regular PIOUS files.
To delete a directory file use pious_rmdir().


.SH RETURN VALUES
Upon successful completion, a value of PIOUS_OK (0) is returned.
Otherwise, a negative value is returned indicating an error condition.

.SH ERRORS
The following error code values can be returned.

.TP
PIOUS_EINVAL
invalid argument value, or no data server executable on host

.TP
PIOUS_EACCES
path prefix search permission or write permission denied
or insufficient privileges to perform operation

.TP
PIOUS_ENOENT
file does not exist on data servers or
.I path
is the empty string

.TP
PIOUS_EBUSY
file in use; operation denied

.TP
PIOUS_ENAMETOOLONG
path or path component name too long

.TP
PIOUS_ENOTDIR
a component of the path prefix is not a directory

.TP
PIOUS_EINSUF
insufficient system resources to complete operation

.TP
PIOUS_ETPORT
error condition in underlying transport system

.TP
PIOUS_EUNXP
unexpected error condition encountered

.TP
PIOUS_EFATAL
fatal error; check data server error logs



.SH SEE ALSO
pious_open(3PIOUS), pious_rmdir(3PIOUS)
